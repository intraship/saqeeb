{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"asssignment3","provenance":[],"authorship_tag":"ABX9TyPHrGtqq0hNdL2XQQjyM2lm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["E13"],"metadata":{"id":"LWHULuU3t9Lq"}},{"cell_type":"code","source":["library(MASS)\n","library(caret)\n","library(ISLR)\n","library(class)\n","attach(Boston)\n","crim01 <- rep(0, length(crim)) # create binary variable for \"crim\"\n","crim01[crim > median(crim)] <- 1\n","Boston <- data.frame(Boston, crim01)\n","Boston <- Boston[-drop(1)]\n","\n","train <- 1:(length(crim) / 2) # split first half of data to train set\n","test <- (length(crim) / 2 + 1):length(crim)\n","Boston.train <- Boston[train, ]\n","Boston.test <- Boston[test, ]\n","crim01.test <- crim01[test]"],"metadata":{"id":"GxeS2UffQ_GM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Logistic Regression\n","glm.fit <- glm(crim01 ~ . - crim01, data = Boston, family = binomial, subset = train)\n","summary(glm.fit)\n","glm.probs <- predict(glm.fit, Boston.test, type = \"response\")\n","glm.pred <- rep(0, length(glm.probs))\n","glm.pred[glm.probs > 0.5] <- 1\n","table(glm.pred, crim01.test)\n","mean(glm.pred != crim01.test)\n","# Error rate is 18.18%\n","glm.fit <- glm(crim01 ~ . - crim01 -chas -nox -tax, data = Boston, family = binomial, subset = train)\n","summmary(glm.fit)\n","glm.probs <- predict(glm.fit, Boston.test, type = \"response\")\n","glm.pred <- rep(0, length(glm.probs))\n","glm.pred[glm.probs > 0.5] <- 1\n","mean(glm.pred != crim01.test)\n","# Error rate is 15.81%\n","table(glm.pred, crim01.test)\n","        crim01.test\n","glm.pred   0   1\n","       0  78  28\n","       1  12 135\n","       "],"metadata":{"id":"qGtHeSoiQ-bM"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bdfb806c-daa7-46c2-84c3-607eb560bd69"},"outputs":[],"source":["#LDA\n","lda.fit <- lda(crim01 ~ . - crim01, data = Boston, subset = train)\n","lda.pred <- predict(lda.fit, Boston.test)\n","table(lda.pred$class, crim01.test)\n","mean(lda.pred$class != crim01.test)\n","# Error rate is 13.44%\n","LDA (-chas -nox -tax)\n","lda.fit <- lda(crim01 ~ . - crim01 - chas - nox - tax, data = Boston, subset = train)\n","lda.pred <- predict(lda.fit, Boston.test)\n","table(lda.pred$class, crim01.test)\n","mean(lda.pred$class != crim01.test)\n","# Error rate is 13.83%"]},{"cell_type":"code","source":["#QDA\n","qda.fit <- qda(crim01 ~ . - crim01, data = Boston, subset = train)\n","qda.pred <- predict(qda.fit, Boston.test)\n","table(qda.pred$class, crim01.test)\n","mean(qda.pred$class != crim01.test)\n","# Error rate is 13.44%\n","QDA (-chas -nox -tax)\n","qda.fit <- qda(crim01 ~ . - crim01 - chas - nox - tax, data = Boston, subset = train)\n","qda.pred <- predict(qda.fit, Boston.test)\n","table(qda.pred$class, crim01.test)\n","mean(qda.pred$class != crim01.test)\n","# Error rate is 13.83%"],"metadata":{"id":"PYx95NmPWU1U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["E2"],"metadata":{"id":"U-kM9ADvt6ep"}},{"cell_type":"code","source":["#g\n","x = 1:10000\n","plot(x,1-(1-1/x)^x)\n","#h\n","store=rep(NA, 10000)\n","for(i in 1:10000) {\n","store[i]=sum(sample (1:100, rep=TRUE)==4) >0\n","}\n","mean(store)\n","#results show the solution closes in at .6427"],"metadata":{"id":"Qkgqhl-ZNjkP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["E8"],"metadata":{"id":"C1pUb-FRt4Hr"}},{"cell_type":"code","source":["#a\n","library(boot)\n","set.seed(1)\n","y=rnorm(100)\n","x=rnorm(100)\n","y=x-2*x^2+rnorm (100)\n","#b\n","plot(x,y)\n","#c\n","#i. Y = β0 + β1X +\n","Data = data.frame(x,y)\n","fit.glm.1 = glm(y~x)\n","cv.glm(Data,fit.glm.1)$delta[1]\n","# [1] 5.890979\n","\n","#ii. Y = β0 + β1X + β2X2 +\n","fit.glm.2 = glm(y~poly(x,2))\n","cv.glm(Data,fit.glm.2)$delta[1]\n","#[1] 1.086596\n","\n","#iii. Y = β0 + β1X + β2X2 + β3X3 +\n","fit.glm.3 = glm(y~poly(x,3))\n","cv.glm(Data,fit.glm.3)$delta[1]\n","#[1] 1.102585\n","\n","#iv. Y = β0 + β1X + β2X2 + β3X3 + β4X4 + .\n","fit.glm.4 = glm(y~poly(x,4))\n","cv.glm(Data,fit.glm.4)$delta[1]\n","#[1] 1.114772\n","\n","#d\n","set.seed(10)\n","fit.glm.1 = glm(y~x)\n","cv.glm(Data,fit.glm.1)$delta[1]"],"metadata":{"id":"zLQmKSq7N2ww"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","E\\ The fit.glm.2 had the smallest LOOCV error most likely due to be a quadratic form means their is one minimum/maximum.\n","\n","f\\ These results were much different than what the cross validation results shown, the least squares likely more overfitting"],"metadata":{"id":"A_NAYN2Pgp8n"}}]}